<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='joined' inline='true' name='federated.0iw7w5e14h46261a8aeq406t4orr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='joined' name='textscan.16iikhz0aml5g21gcux7v1wjat4c'>
            <connection class='textscan' directory='C:/Users/m2ang/OneDrive/Grad School/Data Science Masters notes/Business Intelligence/COVID project' filename='joined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16iikhz0aml5g21gcux7v1wjat4c' name='joined.csv' table='[joined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='real' name='total_cases' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='real' name='total_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='string' name='new_tests' ordinal='17' />
            <column datatype='string' name='total_tests' ordinal='18' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed' ordinal='21' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
            <column datatype='string' name='tests_per_case' ordinal='23' />
            <column datatype='string' name='positive_rate' ordinal='24' />
            <column datatype='string' name='tests_units' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population' ordinal='27' />
            <column datatype='real' name='population_density' ordinal='28' />
            <column datatype='real' name='median_age' ordinal='29' />
            <column datatype='real' name='aged_65_older' ordinal='30' />
            <column datatype='real' name='aged_70_older' ordinal='31' />
            <column datatype='real' name='gdp_per_capita' ordinal='32' />
            <column datatype='real' name='extreme_poverty' ordinal='33' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
            <column datatype='real' name='diabetes_prevalence' ordinal='35' />
            <column datatype='real' name='female_smokers' ordinal='36' />
            <column datatype='real' name='male_smokers' ordinal='37' />
            <column datatype='real' name='handwashing_facilities' ordinal='38' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
            <column datatype='real' name='life_expectancy' ordinal='40' />
            <column datatype='real' name='human_development_index' ordinal='41' />
            <column datatype='real' name='governance_index' ordinal='42' />
            <column datatype='real' name='physicians_per thousand' ordinal='43' />
            <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16iikhz0aml5g21gcux7v1wjat4c' name='joined.csv' table='[joined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='real' name='total_cases' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='real' name='total_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='string' name='new_tests' ordinal='17' />
            <column datatype='string' name='total_tests' ordinal='18' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed' ordinal='21' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
            <column datatype='string' name='tests_per_case' ordinal='23' />
            <column datatype='string' name='positive_rate' ordinal='24' />
            <column datatype='string' name='tests_units' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population' ordinal='27' />
            <column datatype='real' name='population_density' ordinal='28' />
            <column datatype='real' name='median_age' ordinal='29' />
            <column datatype='real' name='aged_65_older' ordinal='30' />
            <column datatype='real' name='aged_70_older' ordinal='31' />
            <column datatype='real' name='gdp_per_capita' ordinal='32' />
            <column datatype='real' name='extreme_poverty' ordinal='33' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
            <column datatype='real' name='diabetes_prevalence' ordinal='35' />
            <column datatype='real' name='female_smokers' ordinal='36' />
            <column datatype='real' name='male_smokers' ordinal='37' />
            <column datatype='real' name='handwashing_facilities' ordinal='38' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
            <column datatype='real' name='life_expectancy' ordinal='40' />
            <column datatype='real' name='human_development_index' ordinal='41' />
            <column datatype='real' name='governance_index' ordinal='42' />
            <column datatype='real' name='physicians_per thousand' ordinal='43' />
            <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>governance_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[governance_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>governance_index</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>physicians_per thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[physicians_per thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>physicians_per thousand</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nurses_and_midwives_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nurses_and_midwives_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>nurses_and_midwives_per_thousand</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_6BCAD678C4884486BF307AFA073EB134]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='joined.csv' datatype='table' name='[__tableau_internal_object_id__].[joined.csv_6BCAD678C4884486BF307AFA073EB134]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Governance Index' datatype='real' name='[governance_index]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Nurses And Midwives Per Thousand' datatype='real' name='[nurses_and_midwives_per_thousand]' role='measure' type='quantitative' />
      <column caption='Physicians Per Thousand' datatype='real' name='[physicians_per thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey, Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[avg:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='joined.csv' id='joined.csv_6BCAD678C4884486BF307AFA073EB134'>
            <properties context=''>
              <relation connection='textscan.16iikhz0aml5g21gcux7v1wjat4c' name='joined.csv' table='[joined#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='iso_code' ordinal='1' />
                  <column datatype='string' name='continent' ordinal='2' />
                  <column datatype='string' name='location' ordinal='3' />
                  <column datatype='date' name='date' ordinal='4' />
                  <column datatype='real' name='total_cases' ordinal='5' />
                  <column datatype='real' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='real' name='total_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='string' name='new_tests' ordinal='17' />
                  <column datatype='string' name='total_tests' ordinal='18' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='21' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
                  <column datatype='string' name='tests_per_case' ordinal='23' />
                  <column datatype='string' name='positive_rate' ordinal='24' />
                  <column datatype='string' name='tests_units' ordinal='25' />
                  <column datatype='real' name='stringency_index' ordinal='26' />
                  <column datatype='real' name='population' ordinal='27' />
                  <column datatype='real' name='population_density' ordinal='28' />
                  <column datatype='real' name='median_age' ordinal='29' />
                  <column datatype='real' name='aged_65_older' ordinal='30' />
                  <column datatype='real' name='aged_70_older' ordinal='31' />
                  <column datatype='real' name='gdp_per_capita' ordinal='32' />
                  <column datatype='real' name='extreme_poverty' ordinal='33' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='35' />
                  <column datatype='real' name='female_smokers' ordinal='36' />
                  <column datatype='real' name='male_smokers' ordinal='37' />
                  <column datatype='real' name='handwashing_facilities' ordinal='38' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
                  <column datatype='real' name='life_expectancy' ordinal='40' />
                  <column datatype='real' name='human_development_index' ordinal='41' />
                  <column datatype='real' name='governance_index' ordinal='42' />
                  <column datatype='real' name='physicians_per thousand' ordinal='43' />
                  <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='joined (2)' inline='true' name='federated.0iw7w5e14h46261a8aeq406t4orr (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='joined' name='textscan.0endorr0p3k60j0zmly8w0rrrn4p'>
            <connection class='textscan' directory='C:/Users/m2ang/OneDrive/Grad School/Data Science Masters notes/Business Intelligence/COVID project' filename='joined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0endorr0p3k60j0zmly8w0rrrn4p' name='joined.csv' table='[joined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='real' name='total_cases' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='real' name='total_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='string' name='new_tests' ordinal='17' />
            <column datatype='string' name='total_tests' ordinal='18' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed' ordinal='21' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
            <column datatype='string' name='tests_per_case' ordinal='23' />
            <column datatype='string' name='positive_rate' ordinal='24' />
            <column datatype='string' name='tests_units' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population' ordinal='27' />
            <column datatype='real' name='population_density' ordinal='28' />
            <column datatype='real' name='median_age' ordinal='29' />
            <column datatype='real' name='aged_65_older' ordinal='30' />
            <column datatype='real' name='aged_70_older' ordinal='31' />
            <column datatype='real' name='gdp_per_capita' ordinal='32' />
            <column datatype='real' name='extreme_poverty' ordinal='33' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
            <column datatype='real' name='diabetes_prevalence' ordinal='35' />
            <column datatype='real' name='female_smokers' ordinal='36' />
            <column datatype='real' name='male_smokers' ordinal='37' />
            <column datatype='real' name='handwashing_facilities' ordinal='38' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
            <column datatype='real' name='life_expectancy' ordinal='40' />
            <column datatype='real' name='human_development_index' ordinal='41' />
            <column datatype='real' name='governance_index' ordinal='42' />
            <column datatype='real' name='physicians_per thousand' ordinal='43' />
            <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0endorr0p3k60j0zmly8w0rrrn4p' name='joined.csv' table='[joined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='real' name='total_cases' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed' ordinal='7' />
            <column datatype='real' name='total_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_per_million' ordinal='12' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
            <column datatype='real' name='total_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_per_million' ordinal='15' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
            <column datatype='string' name='new_tests' ordinal='17' />
            <column datatype='string' name='total_tests' ordinal='18' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed' ordinal='21' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
            <column datatype='string' name='tests_per_case' ordinal='23' />
            <column datatype='string' name='positive_rate' ordinal='24' />
            <column datatype='string' name='tests_units' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='population' ordinal='27' />
            <column datatype='real' name='population_density' ordinal='28' />
            <column datatype='real' name='median_age' ordinal='29' />
            <column datatype='real' name='aged_65_older' ordinal='30' />
            <column datatype='real' name='aged_70_older' ordinal='31' />
            <column datatype='real' name='gdp_per_capita' ordinal='32' />
            <column datatype='real' name='extreme_poverty' ordinal='33' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
            <column datatype='real' name='diabetes_prevalence' ordinal='35' />
            <column datatype='real' name='female_smokers' ordinal='36' />
            <column datatype='real' name='male_smokers' ordinal='37' />
            <column datatype='real' name='handwashing_facilities' ordinal='38' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
            <column datatype='real' name='life_expectancy' ordinal='40' />
            <column datatype='real' name='human_development_index' ordinal='41' />
            <column datatype='real' name='governance_index' ordinal='42' />
            <column datatype='real' name='physicians_per thousand' ordinal='43' />
            <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>governance_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[governance_index]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>governance_index</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>physicians_per thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[physicians_per thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>physicians_per thousand</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nurses_and_midwives_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nurses_and_midwives_per_thousand]</local-name>
            <parent-name>[joined.csv]</parent-name>
            <remote-alias>nurses_and_midwives_per_thousand</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_997547351311949824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(Sum([gdp_per_capita]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='joined.csv' datatype='table' name='[__tableau_internal_object_id__].[joined.csv_E282F7A9EAB34E74A15973B26544B4CC]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Governance Index' datatype='real' name='[governance_index]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Nurses And Midwives Per Thousand' datatype='real' name='[nurses_and_midwives_per_thousand]' role='measure' type='quantitative' />
      <column caption='Physicians Per Thousand' datatype='real' name='[physicians_per thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[gdp_per_capita]' derivation='Avg' name='[avg:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Continent, Location'>
          <field>[continent]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[avg:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tmn:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-10-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-07-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2019-12-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-08-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-05-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-09-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:location:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Jersey, Channel Islands&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='joined.csv' id='joined.csv_E282F7A9EAB34E74A15973B26544B4CC'>
            <properties context=''>
              <relation connection='textscan.0endorr0p3k60j0zmly8w0rrrn4p' name='joined.csv' table='[joined#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='iso_code' ordinal='1' />
                  <column datatype='string' name='continent' ordinal='2' />
                  <column datatype='string' name='location' ordinal='3' />
                  <column datatype='date' name='date' ordinal='4' />
                  <column datatype='real' name='total_cases' ordinal='5' />
                  <column datatype='real' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='7' />
                  <column datatype='real' name='total_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_per_million' ordinal='12' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='13' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='15' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='16' />
                  <column datatype='string' name='new_tests' ordinal='17' />
                  <column datatype='string' name='total_tests' ordinal='18' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='21' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='22' />
                  <column datatype='string' name='tests_per_case' ordinal='23' />
                  <column datatype='string' name='positive_rate' ordinal='24' />
                  <column datatype='string' name='tests_units' ordinal='25' />
                  <column datatype='real' name='stringency_index' ordinal='26' />
                  <column datatype='real' name='population' ordinal='27' />
                  <column datatype='real' name='population_density' ordinal='28' />
                  <column datatype='real' name='median_age' ordinal='29' />
                  <column datatype='real' name='aged_65_older' ordinal='30' />
                  <column datatype='real' name='aged_70_older' ordinal='31' />
                  <column datatype='real' name='gdp_per_capita' ordinal='32' />
                  <column datatype='real' name='extreme_poverty' ordinal='33' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='34' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='35' />
                  <column datatype='real' name='female_smokers' ordinal='36' />
                  <column datatype='real' name='male_smokers' ordinal='37' />
                  <column datatype='real' name='handwashing_facilities' ordinal='38' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='39' />
                  <column datatype='real' name='life_expectancy' ordinal='40' />
                  <column datatype='real' name='human_development_index' ordinal='41' />
                  <column datatype='real' name='governance_index' ordinal='42' />
                  <column datatype='real' name='physicians_per thousand' ordinal='43' />
                  <column datatype='real' name='nurses_and_midwives_per_thousand' ordinal='44' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='65 years or older death rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined (2)' name='federated.0iw7w5e14h46261a8aeq406t4orr (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr (copy)'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:aged_65_older:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[none:continent:nk] / [federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[none:location:nk])</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:aged_65_older:qk]</cols>
      </table>
      <simple-id uuid='{239A6F0D-4B4B-44B7-8F26-1903F5D727D7}' />
    </worksheet>
    <worksheet name='Cumalative confirmed(ghana)'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nigeria&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.10895027965307236' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:qk]</cols>
        <pages>
          <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{D86D5023-F72B-49F1-A23F-6AD208633DDA}' />
    </worksheet>
    <worksheet name='GDP/Life expectancy /total deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]' field-type='quantitative' max='34304061.264100589' min='1.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[avg:life_expectancy:qk]' field-type='quantitative' max='89.342933054393455' min='30.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' field-type='quantitative' max-size='1' min-size='0.266634' type='rangesize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' />
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' />
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-transparency' value='144' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[avg:life_expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' />
              <size column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' />
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' />
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
                <format attr='mark-transparency' value='144' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' />
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' />
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' />
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
                <format attr='mark-transparency' value='144' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iw7w5e14h46261a8aeq406t4orr].[avg:life_expectancy:qk] + [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk])</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{1EBB6E77-5ED0-4951-A51E-69A79221DB86}' />
    </worksheet>
    <worksheet name='GDP/Total Cases '>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</rows>
        <cols>([federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk] + [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk])</cols>
      </table>
      <simple-id uuid='{E909D198-C502-43EA-BF9D-7B796B3343E2}' />
    </worksheet>
    <worksheet name='Map of Confirmed Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[Longitude (generated)]' field-type='quantitative' max='-486529.10426257178' min='-20310614.718162317' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[Latitude (generated)]' field-type='quantitative' max='8820912.9761056919' min='-2507136.4525259808' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' max='34986502.0' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00aa7f</color>
                <color>#1db18c</color>
                <color>#3db99a</color>
                <color>#60c1a9</color>
                <color>#86c9b8</color>
                <color>#aed1c8</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' />
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' />
              <geometry column='[federated.0iw7w5e14h46261a8aeq406t4orr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[Latitude (generated)]</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B94921E3-1EC7-4B36-987F-2B007C4B7D83}' />
    </worksheet>
    <worksheet name='Quarantine /cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:stringency_index:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[avg:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:stringency_index:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iw7w5e14h46261a8aeq406t4orr].[avg:total_cases:qk] + [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:stringency_index:qk])</rows>
        <cols>([federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk] * [federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{41BD15AB-0524-4A78-BD0A-C05E95CC201C}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FBC3ADC-9473-4033-B969-A84495B77B2E}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' />
              <size column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' />
              <lod column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]</cols>
        <pages>
          <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{7536DE4D-85DB-4325-B59B-F6982921FBCC}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' direction='ASC' />
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]</column>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[Multiple Values]</rows>
        <cols>([federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk] / [federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{90DADC1C-79EB-4F70-9BB4-9A315210A096}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:qk]' included-values='in-range'>
            <min>#2020-01-01#</min>
            <max>#2020-10-04#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</column>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk] / [federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk])</rows>
        <cols>([federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok] * [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk])</cols>
      </table>
      <simple-id uuid='{52AA2682-50A9-4F4E-B158-45D26E90971C}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iw7w5e14h46261a8aeq406t4orr].[mn:date:ok]'>
            <groupfilter from='1' function='range' level='[mn:date:ok]' to='9' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iw7w5e14h46261a8aeq406t4orr].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk] + [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:gdp_per_capita:qk])</rows>
        <cols>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{B759E5E5-BC8B-4A3C-883D-BAFE69584AFC}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='joined' name='federated.0iw7w5e14h46261a8aeq406t4orr' />
          </datasources>
          <datasource-dependencies datasource='federated.0iw7w5e14h46261a8aeq406t4orr'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;World&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Bahamas, The&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Taiwan, China&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Jersey, Channel Islands&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</rows>
        <cols>([federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk] + [federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_deaths:qk])</cols>
      </table>
      <simple-id uuid='{2C231F54-2B17-4166-B6C6-772EFC81055A}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1AC8AE8D-207C-4398-BE99-58694579A53C}' />
    </window>
    <window class='worksheet' name='65 years or older death rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr (copy)].[sum:population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE762306-E667-4E75-B919-B6470C3EB99F}' />
    </window>
    <window class='worksheet' name='Map of Confirmed Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-04#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17F0F885-C8A7-4960-B643-5E7AD4CEA028}' />
    </window>
    <window class='worksheet' name='Cumalative confirmed(ghana)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2019-12-31#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EFC4752-6369-4EDB-B0F5-2CD8EF3436D7}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[tyr:date:ok]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30DEBF12-A64C-4193-878E-E5CDFC515F75}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B4EC0AE-A52C-4511-A9CA-B33602B69B2F}' />
    </window>
    <window class='worksheet' name='GDP/Total Cases '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C69D2F3-57EE-4FC4-80E0-DAADC32DEB9A}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53C9FC1A-40D7-487E-89AB-D6094D2A618A}' />
    </window>
    <window class='worksheet' name='Quarantine /cases'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEEC4462-00D6-41C2-B826-28BA07ADF736}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E26EAC1-CB4D-47D4-A5C5-E09641B7A535}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA94493F-24A6-40F9-B59E-502AED5C02FA}' />
    </window>
    <window class='worksheet' maximized='true' name='GDP/Life expectancy /total deaths'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]&#10;[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0iw7w5e14h46261a8aeq406t4orr].[sum:population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[:Measure Names]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:continent:nk]</field>
            <field>[federated.0iw7w5e14h46261a8aeq406t4orr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E637997-5DCF-45BF-A4FF-FA45D52826D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='65 years or older death rate' width='192'>
      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
      JmIq/H/JJnjklRCDHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cumalative confirmed(ghana)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP/Life expectancy /total deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP/Total Cases ' width='192'>
      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
      /x+LIs7bDRCPXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map of Confirmed Cases' width='192'>
      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
      kwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Quarantine /cases' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      Udv/DwK7cQVyDcpvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
